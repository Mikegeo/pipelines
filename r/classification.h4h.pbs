#!/bin/bash
#PBS -l nodes=1:ppn=16,walltime=168:00:00,vmem=60g,mem=220g
#PBS -N classification
#PBS -q himem
#PBS -V
#PBS -j oe
#PBS -m abe
#PBS -M slei.bass@gmail.com

set -eux

module load R
#module load R\3.4.1

##################
## DO NOT TOUCH ##
##################
# cluster directories
# server characteristics and files indexing
scratch=/cluster/projects/kridelgroup
home=/cluster/home/sbassim
pbs=$(echo $PBS_JOBID | cut -f1 -d '.')
project=$scratch/relapse
output=$project/classification/$pbs
jobid=$pbs.R.classification
time=$home/time
start=$(date); echo "Job started at: $start" > $time/$jobid.time



#################
## USER DEFINE ##
#################
## MUST DEFINE BEFORE EXECUTION
_contrast=systemicRelapse
_expressionJOBID=317272
_networkJOBID=317785

############
## PART I ##
############
mkdir -p $output/graph $output/summary $output/scripts $output/selected $output/backups
cd $output


## get R scripts
cp $home/script*/r/classification* $output/scripts
cp $home/script*/r/lsos.R $output/scripts

## get gene epxression
cp $project/summary/phenodata $output/summary
cp $project/networks/$_networkJOBID/expressions $output

## get gene-module associations
cp $project/networks/$_networkJOBID/summary/ids2modules.summary.txt $output
cp $project/networks/$_networkJOBID/summary/ids2description.summary.txt $output


R CMD BATCH $output/script*/classification.R



## backup the expressions for the current job
mv $output/expressions $output/expressions.NTWK$_networkJOBID.EXP$_expressionJOBID
mv $output/*txt $output/summary




##############
## PART III ##
##############
## Restructure logs into R readable summaries.
_metrics=$output/performance1*

if [ ! -f "$_metrics" ]; then
    ## get accuracy and kappa values for all iterations
    ## typically 10 iteractions, each resampled 25 times with the same seed
    ## and for all 25 models
    for m in Accuracy Kappa; do
	cat $_metrics  | sed -n "/${m}/,/NA/p" |\
	    sed -e '1d' -e '$ d' -e 's/|/\t/g' -e 's/^.*Min./model\titeration\tparameters\tMin/g' \
		-e 's/1st Q/1stQ/g' -e 's/3rd Q/3rdQ/g' \
		> $output/log.$m.$_metrics."${pbs}".txt
    done
    rm $_metrics
else
    echo -e "\nPerformance analysis without parameter tuning unsuccessful."
fi

_metrics=$output/performance2*
if [ ! -f "$_metrics" ]; then
    ## get model metrics for tuning parameters
    for m in Accuracy Kappa; do
	cat $_metrics  | sed -n "/${m}/,/NA/p" |\
	    sed -e '1d' -e '$ d' -e 's/|/\t/g' -e 's/^.*Min./model\tparameters\tMin/g' \
		-e 's/1st Q/1stQ/g' -e 's/3rd Q/3rdQ/g' \
		> $output/log.$m.$_metrics."${pbs}".txt
    done
    rm $_metrics
else
    echo -e "\nTuning parameters unsuccessful"
fi


_metrics=$output/performance3*
if [ ! -f "$_metrics" ]; then
    ## get classifiers accuracy and pvalues with otpimum tuned parameter
    cat $_metrics  | sed -e 's/^Class..//g' -e 's/^model/group\tmodel/g' \
			 > $output/log.$_metrics."${pbs}".txt
    rm $_metrics
else
    echo -e "\nPerformance analysis with parameter tuning unsuccessful"
fi


## organize output files
cd $output
mv *pdf graph
mv log* summary
mv *iterations*lambda* selected
mv *Rdata backups

end=$(date); echo "Job ended at: $end" >> $time/$jobid.time


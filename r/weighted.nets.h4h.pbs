#!/bin/bash
#PBS -l nodes=1:ppn=16,walltime=24:00:00,vmem=30g,mem=220g
#PBS -N networks
#PBS -q all
#PBS -V
#PBS -j oe
#PBS -m abe
#PBS -M slei.bass@gmail.com

set -eux

module load R

# cluster directories
# server characteristics and files indexing
scratch=/cluster/projects/kridelgroup
home=/cluster/home/sbassim

pbs=$(echo $PBS_JOBID | cut -f1 -d '.')
project=$scratch/relapse
output=$project/networks/$pbs




## MUST DEFINE BEFORE EXECUTION
_contrast=systemicRelapse
_workingDir=$project/expression/90800
_affymetrix=$_workingDir/summary/normalized.systemic.trx.expression.txt
_strategy=up


## DO NOT TOUCH
mkdir -p $output $output/$_contrast

time=$home/time
jobid=$pbs.R.networks
start=$(date); echo "Job started at: $start" > $time/$jobid.time


############
## PART I ##
############
cd $output

## already set thresholds based on the $_workingDir output
_adjPval=0.049
_avgexpression=5
_foldchange=1

if [ $_strategy == "total" ]; then

    _bstatistics=1.5
    
    touch $output/ids.total.tmp
    
    listFiles=$(find $_workingDir -maxdepth 3 -iname "*${_contrast}.moderated*txt")

    for files in $listFiles; do

	# get transcript IDs for differentially expressed genes based on B-statistics confidence score
	# remove NAs
	cat $files | sed -e '1d' -e 's/ /./g' | awk -vb=$_bstatistics '{if($25>=b) print $0}' | cut -f1 | sort - | uniq -u >> $output/ids.total.tmp

    done

    _counts=$(cat $output/ids.total.tmp | wc -l)

elif [ $_strategy == "up" ]; then

    _bstatistics=0

    touch $output/ids.up.tmp

    ## Get upregulated genes COUNTS
    _counts=$(cat $_workingDir/summary/summary.full*.txt | awk -vb=$_bstatistics '/avgex/ && /up/ {if($9>=1 && $5>=b)print $9}'| awk '{sum+=$1} END {print sum}')

    if [[ $_counts > 150 ]]; then

	_bstatistics=0

	## Get the MODEL/design based on both average expression and b-statisitics thresholds
	_contrast=$(cat $_workingDir/summary/summary.full*.txt | awk -vb=$_bstatistics '/avgex/ && /up/ {if($9>=1 && $5>=b)print $1}'| sort - | uniq -)

	for _index in $_contrast; do

	    listFiles=$(find $_workingDir -maxdepth 3 -iname "${_index}*moderated*txt")

	    for files in $listFiles; do
		
		## Get gene IDs based on adjusted Pvalue and B-statistics values
		## the uniq -u will remove redundant NAs
		cat $files | sed -e '1d' -e 's/ /./g' | \
		    awk -vb=$_bstatistics '{if($25>=b) print $0}' | \
		    awk -vp=$_adjPval '{if($24<=p) print $0}' | \
		    awk -vh=$_foldchange '{if($20>=h) print $1}' | \
		    sort - | uniq -u >> $output/ids.up.tmp
		
	    done

	done

    elif [[ $_counts < 150 ]]; then

	_bstatistics="12-80p"
	
	## Get the MODEL/design based on average expression threshold alone
	_contrast=$(cat $_workingDir/summary/summary.full*.txt | awk '/avgex/ && /up/ {if($9>=1)print $1}'| sort - | uniq -)

	for _index in $_contrast; do

	    listFiles=$(find $_workingDir -maxdepth 3 -iname "${_index}*moderated*txt")

	    for files in $listFiles; do
		
		## Get gene IDs based on adjusted Pvalue and B-statistics values
		## the uniq -u will remove redundant NAs
		cat $files | sed -e '1d' -e 's/ /./g' | \
		    awk -vb=$_bstatistics '{if($25>=b) print $0}' | \
		    awk -vp=$_adjPval '{if($24<=p) print $0}' | \
		    awk -vh=$_foldchange '{if($20>=h) print $1}' | \
		    sort - | uniq -u >> $output/ids.up.tmp

	    done

	done

    fi

fi



# create correct headers
paste <(printf "%s\n" "ids") \
      <(printf "%s\n" "$(sed '2, $d' $_affymetrix)") \
      > $output/expressions
# get expression of only annotated genes (NAs are discarded)
cat $_affymetrix | grep -Fwf <(cat $output/ids.$_strategy.tmp | sort - | uniq -) >> $output/expressions

## for verification, output the dimensions (rows x columns) of the expression file
## number of rows, or genes, must be equal to the number of genes being selected based on their B-stats and average expession
_selected=$(cat $output/expressions | wc -l && awk '{ if(NF>max) max=NF } END {print max}' $output/expressions | sed '1d')
echo -e "\n\nNumber of selected genes x Number of sample cases: "
echo "$_selected"
echo -e "\nNumber of significant genes based on their Bstats >= 0 and average expression >= 10: "
echo "$_counts"
touch $output/${_counts}genes.min${_bstatistics}bstats.min${_avgexpression}avgexp.$(cat $output/expressions | wc -l)selected


#############
## PART II ##
#############
# convert matrix of gene interactions into graphml output
cp $home/script*/r/convertMatrix2graph.R $output

# infer gene-gene interactions
R CMD BATCH $home/script*/r/weighted.nets.affymetrix.R



##############
## PART III ##
##############
cd $output

## sort the output files (networks and heatmaps) into subfolders
## subfolders are later compressed
function sorting_dir () {
    local _index=$1
    _sorted=networks/$_index

    mkdir -p $_sorted
    mv *${_index}* $_sorted
    tar cf $_index.tar $_sorted
    gzip $_index.tar

}

for i in heatmap module standardize range log; do
    sorting_dir $i
    rm -rf networks
done



end=$(date); echo "Job ended at: $end" >> $time/$jobid.time

